@use "sass:map";
@use "sass:color";

// settings for codemirror token colors, fonts, etc.
.cm-editor {
  @each $name, $theme in $themes {
    [data-theme="#{$name}"] & .tok-typeName {
      color: map.get($theme, "token-typename-color");
    }

    [data-theme="#{$name}"] & .tok-className {
      color: map.get($theme, "token-classname-color");
    }

    [data-theme="#{$name}"] & .tok-propertyName {
      color: map.get($theme, "token-propertyname-color");
    }

    [data-theme="#{$name}"] & {
      background-color: map.get($theme, "body-background") !important;
      border-color: color.mix(map.get($theme, "body-font-color"),
        map.get($theme, "body-background"), $weight: 60%);
    }
  }

  .tok-typeName, .tok-className, .tok-propertyName {
    font-weight: bold;
  }

  .cm-gutters {
    @each $name, $theme in $themes {
      [data-theme="#{$name}"] & {
        color: map.get($theme, "muted-label-color");
        background-color: map.get($theme, "body-background");
        border-color: color.mix(map.get($theme, "body-font-color"),
          map.get($theme, "body-background"), $weight: 60%) !important;
      }
    }
  }

  .cm-activeLine, .cm-activeLineGutter {
    @each $name, $theme in $themes {
      [data-theme="#{$name}"] & {
        background-color: color.mix(map.get($theme, "body-background"),
          map.get($theme, "body-font-color"), $weight: 95%);
      }
    }
  }

  .cm-scroller {
    @include font-monospace;
  }

  .cm-content {
    @each $name, $theme in $themes {
      [data-theme="#{$name}"] & {
        caret-color: map.get($theme, "body-font-color") !important;
      }
    }
  }
}

// vim: set ft=scss:
