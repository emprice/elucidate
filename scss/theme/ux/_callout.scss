@use "sass:map";
@use "sass:color";

$admonitions: (
  "todo",
  "caution",
  "warning",
  "danger",
  "attention",
  "hint",
  "important",
  "note",
  "seealso",
  "tip",
);

.callout {
  padding: 1rem;
  border: 1px solid;

  // copied from original Foundation for Sites source
  > :first-child {
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }

  // paragraphs inside callouts
  p {
    margin: 0;
    padding: 0;
  }

  // (optional) title of callout block
  .title {
    line-height: 1;
  }

  // block code inside callouts get different margins
  pre code, pre code.hljs {
    margin: 0.5rem 0 !important;
  }

  @each $name, $theme in $themes {
    [data-theme="#{$name}"] & {
      color: map.get($theme, "body-font-color");
      background-color: color.mix(map.get($theme, "palette-primary"),
        map.get($theme, "body-background"), $weight: 20%);
      border-color: color.mix(map.get($theme, "palette-primary"),
        map.get($theme, "body-background"), $weight: 25%);
    }
  }

  @each $name, $theme in $themes {
    @each $admonition in $admonitions {
      [data-theme="#{$name}"] &.#{$admonition} {
        background-color: map.get($theme, "palette-#{$admonition}");
        border-color: color.mix(map.get($theme, "palette-#{$admonition}"),
          map.get($theme, "body-background"), $weight: 25%);

        // inline code nested inside admonitions get slightly different styling
        p code, p code.hljs {
          background-color: color.mix(map.get($theme, "palette-#{$admonition}"),
            map.get($theme, "body-background"), $weight: 10%);
          border-color: color.mix(map.get($theme, "palette-#{$admonition}"),
            map.get($theme, "body-background"), $weight: 60%);
        }

        a {
          color: color.mix(map.get($theme, "palette-#{$admonition}"),
            map.get($theme, "body-font-color"), $weight: 20%);

          &:hover, &:active {
            color: color.mix(map.get($theme, "palette-#{$admonition}"),
              map.get($theme, "body-font-color"), $weight: 10%);
          }
        }
      }
    }
  }

  @each $admonition in $admonitions {
    &.#{$admonition} a {
      text-decoration: underline dotted;

      &:hover, &:active {
        text-decoration: underline solid;
      }
    }
  }

  &.todo .title::after {
    content: "TODO";
  }

  &.caution .title::after {
    content: "Caution";
  }

  &.warning .title::after {
    content: "Warning";
  }

  &.danger .title::after {
    content: "Danger";
  }

  &.attention .title::after {
    content: "Attention";
  }

  &.hint .title::after {
    content: "Hint";
  }

  &.important .title::after {
    content: "Important";
  }

  &.note .title::after {
    content: "Note";
  }

  &.seealso .title::after {
    content: "See also";
  }

  &.tip .title::after {
    content: "Tip";
  }
}

// vim: set ft=scss:
