@use "sass:map";
@use "sass:color";

:root {
  --base-font-size: 1.1rem;
}

@import 'theme/common';
@import 'theme/code/common';
@import 'theme/code/hljs';
@import 'theme/ux/callout';

@include foundation-table;
@include foundation-sticky;

$block-margin: 1rem;

@include breakpoint(small only) {
  #sticky-container {
    overflow: hidden;
  }

  #page-wrapper-outer {
    overflow-y: scroll;
  }
}

@each $name, $theme in $themes {
  [data-theme="#{$name}"] tbody,
  [data-theme="#{$name}"] thead,
  [data-theme="#{$name}"] tfoot {
    background-color: map.get($theme, "body-background");
  }

  [data-theme="#{$name}"] tr:hover {
    background-color: color.mix(map.get($theme, "body-font-color"),
      map.get($theme, "body-background"), 2.5%);
  }

  [data-theme="#{$name}"] tr:nth-child(2n) {
    background-color: color.mix(map.get($theme, "body-font-color"),
      map.get($theme, "body-background"), 5%);
  }

  [data-theme="#{$name}"] tr:nth-child(2n):hover {
    background-color: color.mix(map.get($theme, "body-font-color"),
      map.get($theme, "body-background"), 7.5%);
  }
}

td {
  vertical-align: top;
}

th {
  vertical-align: middle;
}

// headings
.permalink {
  display: inline-block;

  &:hover::after {
    content: '\00b6';
    margin-left: 0.5em;
  }

  @each $name, $theme in $themes {
    [data-theme="#{$name}"] & a {
      color: map.get($theme, "body-font-color");
      text-decoration: none;
    }

    [data-theme="#{$name}"] & a:hover,
    [data-theme="#{$name}"] & a:active {
      cursor: pointer;
      text-decoration: none;
    }
  }
}

// all text containers
p, li {
  line-height: 1.5;

  @each $name, $theme in $themes {
    [data-theme="#{$name}"] & a {
      color: color.mix(map.get($theme, "palette-secondary"),
        map.get($theme, "body-font-color"), $weight: 30%);
        text-decoration: underline dotted;
    }

    [data-theme="#{$name}"] & a:hover,
    [data-theme="#{$name}"] & a:active {
      color: color.mix(map.get($theme, "palette-secondary"),
        map.get($theme, "body-font-color"), $weight: 20%);
        text-decoration: underline solid;
    }
  }
}

pre {
  @include breakpoint(medium up) {
    white-space: pre-wrap;
  }

  @include breakpoint(small only) {
    white-space: pre-line;
  }
}

// highlighted inline code
p code, p code.hljs, li code, li code.hljs {
  @include inline-code;
}

// highlighted code block
pre code, pre code.hljs {
  @include code-block($block-margin: $block-margin);
}

.callout {

  margin-bottom: $block-margin;

  .title {
    @include font-display;
    margin: 0 0 0.5rem 0;

    &::before {
      margin-right: 0.5em;
      top: 0.15em;
      position: relative;
      display: inline-block;
    }
  }

  a.button {
    margin: 1rem 0 0 0;
    display: inline-block;
  }
}

// vim: set ft=scss:
