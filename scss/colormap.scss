@use "sass:map";

:root {
  --base-font-size: 1rem;
}

@import 'theme/common';
@import 'theme/ux/tooltip';

@include foundation-dropdown;
@include foundation-float-classes;

.grayscale {
  filter: #{grayscale(100%)};
}

#menu {
  button {
    @include button-expand($expand: true);
  }

  li button {
    margin: 0 !important;
  }
}

#app {
  flex-direction: column;
  flex-wrap: nowrap;
  overflow: visible;

  #preview {
    display: block;
    height: 32px;
    width: 100%;
    visibility: hidden;
    object-fit: fill;
  }

  #colors {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: fill;
  }

  #preview-controls {
    margin-bottom: 0.5rem;

    #preview-label {
      margin-right: 1rem;
      display: inline-block;
    }

    #preview-buttons {
      display: inline-block;
      vertical-align: bottom;

      .button {
        margin: 0 0.5rem;
        display: inline-block;
      }
    }

    @include breakpoint(small only) {
      display: flex;

      #preview-label {
        flex: 1 0 auto;
      }

      #preview-buttons {
        flex: 0 1 auto;

        .button {
          margin: 2px 0.5rem;
        }
      }
    }
  }

  #controls-wrapper, #render-wrapper, #preview-wrapper {
    margin-bottom: 1rem;
  }

  @include breakpoint(medium up) {
    #controls-wrapper, #render-wrapper, #preview-wrapper {
      @include xy-cell($size: 12, $vertical: false);
      flex: 0 1 auto;
    }
  }

  @include breakpoint(small only) {
    #render-wrapper {
      flex: 1 0 auto;
      width: auto;
    }

    #controls-wrapper, #preview-wrapper {
      @include xy-cell($size: 12, $vertical: false);
      flex: 0 1 auto;
    }
  }

  #render-wrapper {
    margin-left: 1rem;
    margin-right: 1rem;
    min-height: 100px;
    position: relative;
  }

  #zoom {
    position: absolute;
    right: 0;
    bottom: 0;
    width: 100px;
    height: 100px;
    margin: 10px;
  }

  #controls-wrapper label, #preview-wrapper label {
    @include font-display;
    flex: 0 0 auto;
    height: 3rem;
    font-size: xx-large;
  }

  .slider-handle {
    width: 1.6rem;
    height: 1.6rem;
    border-radius: 50%;
  }

  #breakpoints-control {
    .slider-handle {
      cursor: pointer;

      @each $name, $theme in $themes {
        [data-theme="#{$name}"] &.active {
          outline: 5px solid map.get($theme, "titlebar-background");
          outline-offset: 3px;
        }
      }
    }

    @each $name, $theme in $themes {
      [data-theme="#{$name}"] & .dropdown-pane {
        background-color: map.get($theme, "titlebar-background");
        color: map.get($theme, "titlebar-color");
      }
    }

    .dropdown-pane {
      label {
        font-size: medium;
        display: block;
        height: auto;
      }

      & > div {
        margin: 0.5rem 0;
      }

      .swatch {
        height: 4rem;
        width: 100%;
        display: block;
        margin: 0;
        padding: 0;
      }

      .hex {
        width: 100%;
        flex-direction: row;
        flex-wrap: nowrap;

        label {
          width: 100%;
          display: block;
        }

        div {
          display: flex;
          flex-direction: row;
          flex-wrap: nowrap;

          input {
            @include font-monospace;

            display: block;
            flex: 0 1 100%;
            padding: 0;
            margin: 0;
            min-width: 0;
          }

          button {
            display: block;
            flex: 1 0 auto;
          }
        }
      }

      button {
        @extend .float-right;

        margin: 0;
        padding: 0.5rem;
        font-size: medium;

        @each $name, $theme in $themes {
          [data-theme="#{$name}"] & {
            color: map.get($theme, "titlebar-button-color");
          }

          [data-theme="#{$name}"] &.primary {
            background-color: map.get($theme, "titlebar-button-background-primary");
          }

          [data-theme="#{$name}"] &.secondary {
            background-color: map.get($theme, "titlebar-button-background-secondary");
          }
        }
      }

      &::before {
        top: 100%;
        left: 50%;
        transform: translateX(-50%) translateY(-100%);
        position: relative;
      }

      @each $name, $theme in $themes {
        [data-theme="#{$name}"] &::before {
          @include css-triangle($triangle-size: 1rem, $triangle-direction: up,
            $triangle-color: map.get($theme, "titlebar-background"));
        }
      }

      cursor: default;  // otherwise inherited from the handle
      padding-top: 0;   // pip on top edge adds "ghost" padding
      z-index: 20;      // set sufficiently high to appear "on top"
    }
  }
}

// vim: set ft=scss:
